package asb.pixel.dev;

import org.bukkit.Bukkit;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.RegisteredServiceProvider;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scoreboard.DisplaySlot;
import org.bukkit.scoreboard.Objective;
import org.bukkit.scoreboard.Score;
import org.bukkit.scoreboard.Scoreboard;
import org.bukkit.scoreboard.ScoreboardManager;

import net.milkbowl.vault.permission.Permission;

public class Main extends JavaPlugin implements Listener {

	 static Plugin plugin;
	 
	@Override
	public void onDisable(){
	}
	
	@Override
	public void onEnable(){
		if(!setupPermissions()){
			getLogger().severe(" Plugin requires VAULT to be enabled.");
			Bukkit.getPluginManager().disablePlugin(this);
		}
		plugin = this;
		Bukkit.getServer().getPluginManager().registerEvents(this, this);
		getConfig().options().copyDefaults(true);
		saveConfig();
	}
		public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args) {
			Player p = (Player) sender;
			if(cmd.getName().equalsIgnoreCase("asb")){
				if(p.hasPermission("asb.info")){
					p.sendMessage("§a§lAnthrax Scoreboard");
					p.sendMessage(" ");
					p.sendMessage("§7Version: §a1.1.2 §7§oby §bPixeled_");
					return true;
				}
			} else {
				p.sendMessage("§cNo permission for this.");
				return false;
			}
			return false;
		}
		public static Permission permission = null;
	    private boolean setupPermissions()
	    {
	        RegisteredServiceProvider<Permission> permissionProvider = getServer().getServicesManager().getRegistration(net.milkbowl.vault.permission.Permission.class);
	        if (permissionProvider != null) {
	            permission = permissionProvider.getProvider();
	        }
	        return (permission != null);
	    }
		
		@EventHandler
		public void PlayerJoin(PlayerJoinEvent e){
		
		Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(Main.plugin, new Runnable(){
			public void run(){
				final Player p = e.getPlayer();
				final int o = Bukkit.getOnlinePlayers().size();
				
				ScoreboardManager manager = Bukkit.getScoreboardManager();
				final Scoreboard board = manager.getNewScoreboard();
				
				Objective objective = board.registerNewObjective("test", "dummy");
				objective.setDisplaySlot(DisplaySlot.SIDEBAR);
				objective.setDisplayName(getConfig().getString("SBName").replaceAll("&", "§"));
				
		        Score score1 = objective.getScore(getConfig().getString("YouC").replaceAll("&", "§"));
		        score1.setScore(10);
				
		        Score score2 = objective.getScore(p.getDisplayName());
		        score2.setScore(9);
		        
		        Score space1 = objective.getScore("§d ");
		        space1.setScore(8);
		        
		        Score score3 = objective.getScore(getConfig().getString("OnlineC").replaceAll("&", "§"));
		        score3.setScore(7);
		        
		        Score score4 = objective.getScore(getConfig().getString("OColor" ).replaceAll("&", "§") + o + getConfig().getString("OText").replaceAll("&", "§"));
		        score4.setScore(6);
		        
		        Score space2 = objective.getScore("§f ");
		        space2.setScore(5);
		        
		        Score score5 = objective.getScore(getConfig().getString("RText").replaceAll("&", "§"));
		        score5.setScore(4);
		        
		        Score score6 = objective.getScore(permission.getPrimaryGroup(p.getPlayer()));
		        score6.setScore(3);
		        
		        Score space3 = objective.getScore("§6 ");
		        space3.setScore(2);
		        
		        Score score7 = objective.getScore(getConfig().getString("WebsiteC").replaceAll("&", "§"));
		        score7.setScore(1);
		        
		        Score score8 = objective.getScore(getConfig().getString("WebText").replaceAll("&", "§"));
		        score8.setScore(0);
		        
				p.setScoreboard(board);
				}
			},0, 20 * 2);
		}
	}
